---
title: Datepicker
template: development.jade
---

script.
  moment.locale('de')

:markdown
  To get localized strings use ``moment.locale`` as described in the [momentjs docs](http://momentjs.com/docs/) before opening the datepicker for the first time.

  # Options

  JS | Data API | default | description
  --- | --- | --- | ---
  `action` | not available, uses `'toggle'` | Action (currently only `'toggle'` is supported) | -
  `moment` | not available | Moment JS implementation | `window.moment`
  `input` | `datepicker-watch` (on target element) | Input field to watch for change events | none
  `displayWeek` | `datepicker-display-week` | Whether or not to display week numbers (`true` or `false`) | `false`

  # Data API

  Use the `data-datepicker="**selector**"` attribute on an element to show a datepicker on `selector` on click.

  Other `data-*` options need to be specified on the datepicker target (`selector`).

:sample
  .datepicker#myDatepicker(data-datepicker-watch="#myDatepickerInput", data-datepicker-display-week="false")
    a(data-datepicker="#myDatepicker").datepicker__trigger
    .datepicker__input
      input(type='text').control.control--input#myDatepickerInput

:markdown
  # JS API

  Use the `.datepicker(opts)` method on any jquery object on which to attach a datepicker.

:sample
  script.
    var handleDatepickerClick = function(e) {
      e.preventDefault();

      $('#myDatepicker2').datepicker({
        action: 'toggle',
        moment: window.moment,
        input: $('#myDatepickerInput2'),
        displayWeek: true
      })
    }

  .datepicker#myDatepicker2
    a(onclick="handleDatepickerClick(event)").datepicker__trigger
    .datepicker__input
      input(type='text').control.control--input#myDatepickerInput2

// Copyright AXA Versicherungen AG 2015
