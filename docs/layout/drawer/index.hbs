---
title: Drawer component
description: Add a fixed drawer-like element for your mobile or desktop navigation.
nav: side/layout/drawer
order: 2
lunr: true
toc:
  - title: Overview
    slug: overview
  - title: Top drawer
    slug: top-drawer
  - title: Side drawer
    slug: side-drawer
  - title: Persistent side drawer
    slug: persistent-side-drawer
---

{{#> page}}
  {{#*inline "content"}}

    <h1 class="docs-h2">{{title}}</h1>

    <p class="lead">The drawer is a flexible layout component. It helps you
    create togglable mobile menus. On larger viewports,
    it can also stick persistently on one side.
    This website you're on even uses both depending on the viewport!</p>

    {{> table-of-contents data=toc}}

    <h2 id="overview" class="docs-h3">Overview</h2>

    <p>Most probably, you'll use the drawer as a mobile menu.
    The recommended way is to let it slide in from the top of the screen,
    where it then presents a menu.
    However, the drawer also supports toggling
    from both sides of the screen.</p>

    <p>These are the <em>interactive</em> ways of using the drawer:</p>

    <ul>
      <li>Toggle from top</li>
      <li>Toggle from left side</li>
      <li>Toggle from right side</li>
    </ul>

    <p>It is also possible to use a static approach and make the drawer
    persist on either the left or the right side of the screen. This
    can be helpful for websites that are solely driven by a navigation
    and can afford the always occupied screen estate:</p>

    <ul>
      <li>Persist on left side</li>
      <li>Persist on right side</li>
    </ul>

    <p>Ultimately, all these ways of using the drawer can also be combined.
    For example, you can make the drawer togglable on small devices
    and persistent on large screens.</p>

    <h2 id="top-drawer" class="docs-h3">Top drawer</h2>

    <p>In order to add a top drawer, first add a
    <code>[data-make="drawer"]</code> to your <code>&lt;body&gt;</code> element
    or one that will be parent of the drawer and your burger button. This
    will introduce the drawer toggling feature, which toggles the drawer
    whenever a <code>.header-burger</code> is clicked. It also
    sends events to the <code>[data-fade="drawer"]</code> plugin,
    which then intelligently switches CSS classes, depending on whether
    the drawer is open or not.</p>

    <p>Next, add a
    <code>&lt;div class="drawer togglable-*-top"&gt;&lt;/div&gt;</code>
    element to your page. Use the <code>[data-fade="drawer"]</code> plugin
    to toggle the <code>.in</code> class when the drawer should be open.</p>

    <p>Ultimately, make sure you have a burger button somewhere in your page.
    Add a <code>&lt;a href="#" class="header-burger"&gt;&lt;/a&gt;</code>
    element for that.</p>

    <p>The following is the full example of a top drawer:</p>

    {{> example path="/layout/drawer/demos/top-drawer.html"}}
    {{#code-snippet "html"}}
      <body data-make="drawer">
        <!-- Burger in header -->
        <a href="#" class="header-burger float-xs-right" data-fade="drawer" data-target="#site" data-in="is-open">
          <span class="header-burger-line"></span>
        </a>

        <!-- Content here... -->

        <div class="drawer togglable-xs-top" data-fade="drawer" data-target="#site" data-in="in">
          <!-- Drawer content here... -->
        </div>
      </body>
    {{/code-snippet}}

    <h2 id="side-drawer" class="docs-h3">Side drawer</h2>

    <p>Creating a side drawer is similar to creating a
    <a href="#top-drawer">top drawer</a>. There are only two differences.
    Use the <code>.togglable-*-left</code> or
    <code>.togglable-*-right</code> class on the drawer.</p>

    <p>Also, when making the drawer togglable from the side, it's highly
    recommended to display a content mask, which can also be used
    to close the drawer.</p>

    <p>This is done using a <code>.mask</code>
    element and the <code>[data-fade="drawer"]</code> plugin.</p>

    {{#code-snippet "html"}}
      <a
        href="#"
        class="mask"
        data-fade="drawer"
        data-target="#site"
        data-in="fade-in-xs-down"
        data-out="fade-out-delayed-xs-down">
      </a>
    {{/code-snippet}}

    <p>The following is the full example of a side drawer:</p>

    {{> example path="/layout/drawer/demos/side-drawer.html"}}
    {{#code-snippet "html"}}
      <body data-make="drawer">
        <!-- Burger in header -->
        <a href="#" class="header-burger float-xs-right" data-fade="drawer" data-target="#site" data-in="is-open">
          <span class="header-burger-line"></span>
        </a>

        <!-- Content here... -->

        <div class="drawer togglable-xs-right" data-fade="drawer" data-target="#site" data-in="in">
          <!-- Drawer content here... -->
        </div>

        <a href="#" class="mask" data-fade="drawer" data-target="#site" data-in="fade-in-xs-down" data-out="fade-out-delayed-xs-down"></a>
      </body>
    {{/code-snippet}}

    <h2 id="persistent-side-drawer" class="docs-h3">Persistent side drawer</h2>

    <p>Creating a persistent drawer is much easier than adding a
    togglable one to your web app. You don't need to
    introduce any plugins to your site.</p>

    <p>You just need to use either the <code>persistent-*-left</code>
    or the <code>persistent-*-right</code> class on your drawer
    element.</p>

    <p>The following is the full example of a persistent side drawer:</p>

    {{> example path="/layout/drawer/demos/persistent-drawer.html"}}
    {{#code-snippet "html"}}
      <body class="push-sm-left">
        <!-- Content here... -->

        <div class="drawer persistent-sm-left hidden-xs-down">
          <!-- Drawer content here... -->
        </div>
      </body>
    {{/code-snippet}}

  {{/inline}}
{{/page}}
