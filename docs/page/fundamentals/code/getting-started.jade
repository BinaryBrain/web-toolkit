---
title: Getting started
order: 1
collection: nav__fundamentals__code
template: page.jade
---
  
aside.callout
  h2.callout__heading Feedback appreciated!
  p.paragraph
    | The Web Styleguide aims to support you in building awesome
    | responsive web sites and apps. If you struggle using the assets, 
    | miss a component or face any other issue please feel free to
    = ' '
    a(href=config.repository.url, title=config.repository.name).link file an issue on github
    |  or 
    a(data-uv-trigger, data-uv-mode="contact").link use the feedback form
    | .

//- h2.heading.heading--secondary What is the developer toolkit?
//- p.paragraph
//-   | The Developer Toolkit is a library of HTML, CSS, JavaScript and other
//-   | resources you can include in your products.
//-   | It provides you components to help you create awesome features.
//-   | The components are aligned to the&nbsp;
//-   a(href=relative('/design')).link Design Guidelines
//-   | . Please read the Design Guidelines carefully before you design a new
//-   | User Interface.

h2.heading.heading--secondary Getting the web design guide

h3.heading.heading--tertiary Good old direct download

p.paragraph
  | You can&nbsp;
  a(href=relative('/downloads/' + package.name + '-dist-'+package.version+'.tar.gz'), title="Latest Release Package").link download the latest release package here.

h3.heading.heading--tertiary Use npm (recommended)

p.paragraph.
  Since we use npm for the web design guide we recommend
  the use of npm in your project as well. You'll get the
  web design guide with a simple npm install as follows.

.highlight
  pre.highlight__listing
    code npm install --save-dev http://design.axa.ch/downloads/#{package.name}-#{package.version}.tgz

h3.heading.heading--tertiary Use bower

p.paragraph.
  If you want to use the web design guide install it using a simple bower install.

.highlight
  pre.highlight__listing
    code bower install http://design.axa.ch/downloads/#{package.name}-dist-#{package.version}.tar.gz --save

h2.heading.heading--secondary What's included

p.paragraph.
  The web design guide is delivered in two diffrent flavours.
  The npm package and the dist package (raw download and bower).
  Compare the structures below.

  They both contain the following assets (and some other stuff
  not descirbed here).

dl
  dt css
  dd.
    The precompiled css assets for the style.less and normalize.less.
    We recommend using the Less assets to maintain configurability
    (see customization section below).

  dt docs
  dd A copy of the docs you're currently reading.

  dt fonts
  dd.
    Here you'll find the icon font used within the web design guide
    in various formats.

  dt images
  dd.
    Contains all image assets used by the web design guide.

  dt jquery
  dd.
    Compiled (CoffeeScript) and optionally minified jQuery plugins.
    You can include each plugin individually or include the
    axa-wsg.jquery.all(.min).js to include them all.

  dt less
  dd.
    Less files you can include in your project.
    You can either include single blocks/mixins or use the aggregate
    style.less which includes all blocks. Additionally you should
    also include the normalize.less to get rid of browser specific
    stylings.
      
  dt ng
  dd.
    Angular directives (JS and HTML) files.
    TODO
    
TODO: Why the heck do we habe two diffrent archives???
    
.l-row
  .l-half
    h3.heading.heading--tertiary npm package
    .highlight
      pre.highlight__listing
        code.
          axa-web-design-guide/
          ├── dist/
          │   ├── less/
          │   ├── js/
          │   ├── images/
          │   ├── fonts/
          │   ├── docs/
          │   └── css/
          ├── README.md
          ├── package.json
          ├── LICENSE.md
          └── .npmignore

  .l-half
    h3.heading.heading--tertiary download & bower package
    .highlight
      pre.highlight__listing
        code.
          axa-web-design-guide/
          ├── less/
          ├── js/
          ├── images/
          ├── fonts/
          ├── docs/
          │── css/
          ├── README.md
          ├── LICENSE.md
          └── bower.json
          
          
h2.heading.heading--secondary Using the Web Styleguide

h3.heading.heading--tertiary Basic template

.highlight: pre.highlight__listing.hljs: code.js
  :highlight
    <!DOCTYPE html>
    <html lang="en">
      <head>
        <title>AXA Web Styleguide - Basic template</title>
        
        <!-- meta tags as explained in the recommendations page -->
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, minimum-scale=1.0, maximum-scale=1.0">
        
        <!-- add polyfills, SEO and Social metadata tags here -->

        <!-- include the procided style.min.css or your own css assets -->
        <link href="css/style.min.css" rel="stylesheet">
      </head>
      <body>
        <h1>Hello, world!</h1>

        <!-- optional: add jQuery plugins -->
        <script src="libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="libs/moment.js/2.9.0/moment.js"></script>
        <script src="js/style.all.min.js"></script>
      
      </body>
    </html>

p.paragraph.
  Please have a look at the following pages for optimization.
  
ul.list.list--unordered
  li.list__item
    a(href=relative('/fundamentals/code/browser-support.html')).link Browser support
  li.list__item
    a(href=relative('/fundamentals/code/recommendations.html')).link TODO: Recommendations
  li.list__item
    a(href=relative('/fundamentals/code/seo.html')).link Search Engine Optimisation (SEO)
  li.list__item
    a(href=relative('/fundamentals/code/social-metadata.html')).link Social metadata
    
    
h2.heading.heading--secondary LESS/CSS

p.paragraph.
  You can either use the CSS files provided in the packages or compile the LESS
  assets on your own.
    
h3.heading.heading--tertiary Using the CSS files

p.paragraph.
  Use the CSS files as mentioned in the Basic template above.
  
p.paragraph.
  When using the CSS files make sure that the assets referenced from the
  CSS files (e.g. images at `../images`) are available.
  
h3.heading.heading--tertiary Compiling the LESS files on your own

p.paragraph.
  When compiling the LESS files on your own you get much more freedom.
  
ul.list.list--unordered
  li.list__item Inculde the blocks you need and omit those you don't need
  li.list__item Customize LESS variables
  li.list__item use custom post processing
   
h4.heading Basic LESS template

p.callout.
  The following examples assume that you have added the
  `less/` folder of the Web Styleguide to the LESS compilers
  paths.
  
p.paragraph.
  This example includes the whole Web Styleguide
  
.highlight: pre.highlight__listing.hljs: code.js
  :highlight
    @import './style/basics.less';

    @import './style/utils';
    @import './style/grid';
    
    
  
p.paragraph.
  This example includes only the needed elements
  
.highlight: pre.highlight__listing.hljs: code.js
  :highlight
    @import 'normalize';
    @import 'style';
    
h4.heading Post processing

h4.heading Basic less file

h4.heading Basic less file
    
hr.hr
    

h3 What's next

p.paragraph.
  Make sure the static assets (js, images, fonts, css, etc.)
  you want to use are available from the web and include the
  assets to be compiled (e.g. less) in your build mechanism.

p.callout.callout--danger.
  Watch out to not break paths when using the css assets. The
  images are referenced with a relative path of ../images from
  the css. When using less assets you can configure the path as
  described in the Less variables section below.

h3 Compiling the less files on your own

h5 Prefixing

p.paragraph.
  You should use the autoprefixer to add vendor specific prefixes.
  Make sure to configure the autoprefixer correctly to add support
  for the browsers you target.

h5 IE9 support

p.paragraph.
  To add IE9 support you need to add single-colon CSS 2.1 syntax
  psuedo elements (:after) in addition to CSS 3 double-colon
  syntax (::after). We wrote the postcss-pseudoelements postcss
  plugin which adds those single-color selectors.

h5 Less variables

table.table
  thead
    tr.table__header
      th.table__header__item Name
      th.table__header__item Default
      th.table__header__item Description
  tbody.table__content
    tr.table__row
      td.table__row__item.table__row__item--headline: code @icon-font-path
      td.table__row__item: code '../fonts'
      td.table__row__item.
        Relative (to the CSS file) or absolute path
        where the browser should download the icon font files from.
    tr.table__row
      td.table__row__item.table__row__item--headline: code @images-path
      td.table__row__item: code '../images'
      td.table__row__item.
        Relative (to the CSS file) or absolute path
        where the browser should download the images from.


h3#basic-template Basic template
p.paragraph.
  The basic template below should provide you with
  a starting point for your next web app.
  See the comments in the template itself for any explanations.



// Copyright AXA Versicherungen AG 2015
